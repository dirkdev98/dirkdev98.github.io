name: CI / push
on: [push]

jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-
            ${{ runner.os }}-

      - name: Lint
        run: |
          yarn
          yarn compas lint

  deploy:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [15]
    runs-on: ${{ matrix.os }}
    needs:
      - lint
    if: github.ref == 'refs/heads/main'
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      - name: Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-
            ${{ runner.os }}-

      - name: Copy to out
        # We keep running Yarn here, as we may want to add some preprocessing
        run: |
          yarn
          yarn compas build

      - name: Deploy
        uses: s0/git-publish-subdir-action@v2.4.0
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: out
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: "chore: publish docs for {sha}\n\n{msg}"
